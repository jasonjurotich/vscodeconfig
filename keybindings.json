[
  {
    "key": "cmd+e",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "alt+z",
    "command": "workbench.action.toggleActivityBarVisibility"
  },
  {
    "key": "shift+cmd+x",
    "command": "workbench.action.toggleStatusbarVisibility"
  },
  {
    "key": "alt+k",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "cmd+j",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.focusFirstEditorGroup"
  },
  {
    "key": "ctrl+j",
    "command": "terminal.focus"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusLastEditorGroup"
  },
  {
    "key": "cmd+k",
    "command": "workbench.action.openGlobalKeybindings"
  },
  {
    "key": "alt+d",
    "command": "workbench.action.toggleMultiCursorModifier"
  },
  {
    "key": "alt+p",
    "command": "spotify.playPause"
  },
  {
    "key": "alt+f8",
    "command": "-editor.action.marker.next",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+alt+,",
    "command": "workbench.action.positionPanelRight"
  },
  {
    "key": "ctrl+cmd+m",
    "command": "livePreview.start.internalPreview.atFile"
  },
  {
    "key": "shift+left",
    "command": "workbench.action.terminal.resizePaneLeft"
  },
  {
    "key": "shift+right",
    "command": "workbench.action.terminal.resizePaneRight"
  },
  {
    "key": "cmd+right",
    "command": "workbench.action.decreaseViewSize"
  },
  {
    "key": "cmd+left",
    "command": "workbench.action.increaseViewSize"
  },
  {
    "key": "tab",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "shift+tab",
    "command": "selectPreviousSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "shift+tab",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "shift+cmd+s",
    "command": "remoteHub.commit"
  },
  {
    "key": "ctrl+cmd+left",
    "command": "workbench.action.decreaseViewSize"
  },
  {
    "key": "ctrl+cmd+right",
    "command": "workbench.action.increaseViewSize"
  },
  {
    "key": "cmd+shift+k",
    "command": "workbench.action.terminal.focusNext"
  },
  {
    "key": "ctrl+k",
    "command": "restartterm"
  },
  {
    "key": "f5",
    "command": "workbench.action.debug.continue",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "f5",
    "command": "-workbench.action.debug.continue",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "shift+cmd+d",
    "command": "-workbench.view.debug",
    "when": "viewContainer.workbench.view.debug.enabled"
  },
  {
    "key": "shift+cmd+d",
    "command": "vscode-postgres.runQuery",
    "when": "editorLangId == 'postgres'"
  },
  {
    "key": "f5",
    "command": "-vscode-postgres.runQuery",
    "when": "editorLangId == 'postgres'"
  },
  {
    "key": "enter",
    "command": "filesExplorer.openFilePreserveFocus",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus"
  },
  {
    "key": "cmd+q",
    "command": "workbench.action.quit"
  },
  {
    "key": "space",
    "command": "-filesExplorer.openFilePreserveFocus",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus"
  },
  // {
  //   "key": "space",
  //   "command": "",
  //   "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus"
  // },
  // {
  //   "key": "space r",
  //   "command": "togs",
  //   "when": "explorerViewletVisible && sideBarFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  // },
  {
    "key": "shift+k",
    "command": "search.action.focusPreviousSearchResult",
    "when": "hasSearchResult || inSearchEditor"
  },
  {
    "key": "shift+j",
    "command": "search.action.focusNextSearchResult",
    "when": "hasSearchResult || inSearchEditor"
  },
  {
    "key": "shift+cmd+backspace",
    "command": "-search.searchEditor.action.deleteFileResults",
    "when": "inSearchEditor"
  },
  {
    "key": "ctrl+h",
    "command": "-extension.vim_ctrl+h",
    "when": "editorTextFocus && vim.active && vim.use<C-h> && !inDebugRepl"
  },
  {
    "key": "ctrl+home",
    "command": "-extension.vim_ctrl+home",
    "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+y",
    "command": "-extension.vim_ctrl+y",
    "when": "editorTextFocus && vim.active && vim.use<C-y> && !inDebugRepl"
  },
  {
    "key": "ctrl+y",
    "command": "workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+shift+`",
    "command": "-workbench.action.terminal.new",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "key": "shift+alt+f",
    "command": "editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    "key": "shift+alt+f",
    "command": "-editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  {
    "key": "alt+k",
    "command": "-editor.action.accessibilityHelpConfigureKeybindings",
    "when": "accessibilityHelpIsShown"
  },
  {
    "key": "cmd+e",
    "command": "-editor.action.toggleScreenReaderAccessibilityMode",
    "when": "accessibilityHelpIsShown"
  },
  {
    "key": "cmd+e",
    "command": "-actions.findWithSelection"
  },
  {
    "key": "cmd+w",
    "command": "-workbench.action.terminal.killEditor",
    "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+shift+w",
    "command": "workbench.action.terminal.kill"
  },
  {
    "key": "shift+cmd+z",
    "command": "-redo"
  },
  {
    "key": "shift+u",
    "command": "redo"
  },
  {
    "key": "shift+u",
    "command": "extension.vim_ctrl+r",
    "when": "editorTextFocus && vim.active && vim.mode == 'normal' && vim.use<C-r> && !inDebugRepl"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.quickOpenNavigateNextInRecentFilesPicker",
    "when": "inQuickOpen && inRecentFilesPicker"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },
  {
    "key": "alt+cmd+l",
    "command": "-rest-client.rerun-last-request",
    "when": "editorTextFocus && editorLangId == 'http'"
  },
  {
    "key": "alt+cmd+l",
    "command": "-rest-client.rerun-last-request",
    "when": "editorTextFocus && editorLangId == 'plaintext'"
  },
  {
    "key": "alt+cmd+l",
    "command": "-rest-client.rerun-last-request",
    "when": "httpResponsePreviewFocus"
  },
  {
    "key": "alt+s",
    "command": "-gitlens.showQuickRepoStatus",
    "when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
  },
  {
    "key": "alt+s",
    "command": "-markdown.extension.editing.toggleStrikethrough",
    "when": "false"
  },
  {
    "key": "alt+s",
    "command": "editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+right",
    "command": "-editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+l",
    "command": "geminicodeassist.signin"
  },
  {
    "key": "alt+l",
    "command": "cloudcode.gemini.chatView.focus"
  },
  {
    "key": "alt+q", // <-- Replace with YOUR desired shortcut
    "command": "workbench.action.tasks.runTask",
    "args": "Git: Quick Add, Empty Commit, Push" // <-- MUST exactly match the "label" in tasks.json
  },
  {
    "key": "alt+cmd+s",
    "command": "-saveAll"
  },
  {
    "key": "alt+.",
    "command": "-gitlens.diffWithNext",
    "when": "editorTextFocus && gitlens:enabled && !isInDiffEditor && config.gitlens.keymap == 'alternate' && resourceScheme =~ /^(gitlens|git|pr)$/"
  },
  {
    "key": "alt+.",
    "command": "-gitlens.diffWithNextInDiffLeft",
    "when": "editorTextFocus && gitlens:enabled && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'alternate' && resourceScheme =~ /^(gitlens|git|pr)$/"
  },
  {
    "key": "alt+.",
    "command": "-gitlens.diffWithNextInDiffRight",
    "when": "editorTextFocus && gitlens:enabled && isInDiffRightEditor && config.gitlens.keymap == 'alternate' && resourceScheme =~ /^(gitlens|git|pr)$/"
  },
  {
    "key": "alt+.",
    "command": "-gitlens.key.alt+.",
    "when": "gitlens:key:."
  },
  {
    "key": "alt+.",
    "command": "workbench.action.toggleAuxiliaryBar"
  },
  {
    "key": "alt+cmd+b",
    "command": "-workbench.action.toggleAuxiliaryBar"
  },
  {
    "key": "shift+cmd+j",
    "command": "-workbench.action.search.toggleQueryDetails",
    "when": "inSearchEditor || searchViewletFocus"
  },
  {
    "key": "shift+cmd+k",
    "command": "-editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  }
]
